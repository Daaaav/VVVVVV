name: CI

# Trigger this workflow on push or pull request
on: [push, pull_request]

env:
  SRC_DIR_PATH: desktop_version

jobs:
  build:
    name: Build

    runs-on: ${{ matrix.os }}

    env:
      CXXFLAGS: -I/usr/local/include/SDL2
      LDFLAGS: -L/usr/local/lib

    strategy:
      matrix:
        os: [ubuntu-18.04, macos-latest]

    steps:
    - uses: actions/checkout@v1

    - name: Install dependencies (Linux)
      if: startsWith(matrix.os, 'ubuntu')
      run: |
        sudo apt-get update
        sudo apt-get install -y ninja-build libsdl2-dev libsdl2-mixer-dev

    - name: Install dependencies (macOS)
      if: startsWith(matrix.os, 'macos')
      run: brew install ninja sdl2 sdl2_mixer

    - name: CMake configure (default version)
      run: |
        mkdir ${SRC_DIR_PATH}/build && cd ${SRC_DIR_PATH}/build
        cmake -GNinja ..
    - name: Build (default version)
      run: ninja -C ${SRC_DIR_PATH}/build

    - name: CMake configure (official)
      run: |
        cd ${SRC_DIR_PATH}/build
        cmake -DOFFICIAL_BUILD=ON ..
    - name: Build (official)
      run: |
        ninja -C ${SRC_DIR_PATH}/build

    - name: CMake configure (M&P)
      run: |
        cd ${SRC_DIR_PATH}/build
        cmake -DOFFICIAL_BUILD=OFF -DMAKEANDPLAY=ON ..
    - name: Build (M&P)
      run: ninja -C ${SRC_DIR_PATH}/build

    - name: CMake configure (no custom levels)
      run: |
        cd ${SRC_DIR_PATH}/build
        cmake -DMAKEANDPLAY=OFF -DCUSTOM_LEVEL_SUPPORT=DISABLED ..
    - name: Build (no custom levels)
      run: ninja -C ${SRC_DIR_PATH}/build

    - name: CMake configure (no editor)
      run: |
        cd ${SRC_DIR_PATH}/build
        cmake -DCUSTOM_LEVEL_SUPPORT=NO_EDITOR ..
    - name: Build (no editor)
      run: ninja -C ${SRC_DIR_PATH}/build


    - name: Upload binary (Linux)
      if: startsWith(matrix.os, 'ubuntu')
      uses: actions/upload-artifact@v1
      with:
        name: VVVVVV-MP-Linux-binary
        path: desktop_version/build/VVVVVV


    - name: Build .app (macOS)
      if: startsWith(matrix.os, 'macos')
      run: |
        mkdir -pv ${SRC_DIR_PATH}/build/VVVVVV-app/VVVVVV-MP.app/Contents/MacOS/
        mkdir -pv ${SRC_DIR_PATH}/build/VVVVVV-app/VVVVVV-MP.app/Contents/Resources
        mv -v ${SRC_DIR_PATH}/build/VVVVVV ${SRC_DIR_PATH}/build/VVVVVV-app/VVVVVV-MP.app/Contents/MacOS/VVVVVV
        tar -czvf VVVVVV-MP-macOS.tgz ${SRC_DIR_PATH}/build/VVVVVV-app/VVVVVV-MP.app

    - name: Upload .app (macOS)
      if: startsWith(matrix.os, 'macos')
      uses: actions/upload-artifact@v1
      with:
        name: VVVVVV-MP-macOS
        path: VVVVVV-MP-macOS.tgz


  build-win:
    name: Build (Ubuntu + MinGW64)

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v1

    - name: Install Nix
      uses: cachix/install-nix-action@v6

    - name: Build
      run: |
        cd $SRC_DIR_PATH
        mkdir -p build
        nix-shell --arg cross true --run './build.sh'

    - name: ls everything
      run: pwd && ls -R

    - name: Copy DLLs and all
      run: |
        mkdir -p desktop_version/build/VVVVVV-MP-Windows
        cp -rv .github/libs/* desktop_version/build/VVVVVV.exe desktop_version/build/VVVVVV-MP-Windows/

    - name: Upload artifacts
      uses: actions/upload-artifact@v1
      with:
        name: VVVVVV-MP-Windows
        path: desktop_version/build/VVVVVV-MP-Windows
